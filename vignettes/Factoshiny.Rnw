\documentclass[11]{article}
%\usepackage{geometry}
\usepackage{graphicx}
\usepackage[pdftex,
bookmarks,
bookmarksopen,
pdfauthor={Mathieu Emily},
pdftitle={Factoshiny}]
{hyperref}

\oddsidemargin -2 mm
\evensidemargin -2 mm
\textwidth 170 mm
\topmargin -2 cm
\textheight 23.5 cm
\newcommand{\code}[1]{\texttt{#1}}
\newcommand{\pkg}[1]{{\fontseries{b}\selectfont #1}}

\usepackage{Sweave}
\SweaveOpts{echo=TRUE, eval=FALSE,concordance=TRUE}

\begin{document}
\setkeys{Gin}{width=1.0\textwidth}

%\VignetteIndexEntry{Factoshiny Introduction} 
%\VignettePackage{Factoshiny}

\title{Factoshiny vignette}
\author{Fran\c cois Husson}
\date{\today}
\maketitle

\section{Introduction}

As its name suggests, the \pkg{Factoshiny} package uses \emph{shiny} technology to produce a graphical interface of the \pkg{FactoMineR} package in the form of an \emph{html} page (see figure~\ref{fig:factoshiny}). 
Users can fill out different fields to fine tune their analyses. Once the fields are completed, the analyses are conducted instantly and provide the chosen graphs. The following code indicates how \pkg{Factoshiny} can be used to carry out a PCA.

<< eval=FALSE, echo=TRUE  >>=
library(Factoshiny)
data(decathlon)
res.shiny <- PCAshiny(decathlon)
@

Then the interface is used to choose the parameters of the PCA analysis as well as the parameters of the graphical outputs. 
Cursors enable users to change the extent to which objects are selected using representation quality or contribution and other cursors can be used to change the size of the font used to label the graph. The graphs and outputs are updated immediately, which makes these selections easier.

\begin{figure}[!h]
\begin{center}
\includegraphics[width=\textwidth]{fig5_3.jpg}
\caption{PCA with \pkg{Factoshiny}.\label{fig:factoshiny}}
\end{center}
\end{figure}

It is also possible to first perform the PCA analysis and then to use the PCA outputs in order to modify the graphs.

<< eval=FALSE, echo=TRUE  >>=
res.pca <- PCA(decathlon, quanti.sup=11:12, quali.sup=13, graph=FALSE)
res.shiny <- PCAshiny(res.pca)
@

It is also possible to reuse the object resulting from \pkg{Factoshiny} in order to further modify the graphs, using the configuration described previously:

<< eval=FALSE, echo=TRUE  >>=
res.shiny2 <- PCAshiny(res.shiny)
@

The functions \code{CAshiny}, \code{MCAshiny} and \code{MFAshiny} operate on exactly the same principle.
From a certain point of view, the \pkg{Factoshiny} package is a natural evolution of the \pkg{RcmdrPlugin.FactoMineR} package: compared to its predecessor, \pkg{Factoshiny} includes the latest graphical updates in the \pkg{FactoMineR} package, it is more user-friendly, and in particular, it enables the user to handle and explore data directly.

In addition to its \pkg{FactoMineR} interfacing capabilities and its ability to effortlessly create complex graphs, the \pkg{Factoshiny} package can also generate the code used to construct the graphs. 

\section{The functions of the \pkg{Factoshiny} package}

Several functions are available according to the dataset and the nature of the active variables.

\code{
\begin{tabular}{llll}
Nature of active variables& Method & Function \\
continuous & Principal Component Analysis &  PCAshiny\\
contingency table & Correspondence Analysis &  CAshiny\\
qualitative & Multiple Correspondence Analysis &  MCAshiny\\
Group of variables  & Multiple Factor Analysis  & MFAshiny \\
&Clustering  & HCPCshiny 
\end{tabular}\\[5mm]
}

You can see this video which is in French: \url{https://www.youtube.com/watch?v=4T9tDX4aVS4}

\end{document}
